AWSTemplateFormatVersion: 2010-09-09
Description: 'Security Operations on AWS: Lab 6 - Using AWS KMS'
Parameters:
  VPCCIDR:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.0.0.0/16
    AllowedValues:
      - 10.0.0.0/16
  PublicSubnet1Param:
    Description: Public Subnet 1
    Type: String
    Default: 10.0.10.0/24
    AllowedValues:
      - 10.0.10.0/24
  PrivateSubnet1Param:
    Description: Private Subnet 1
    Type: String
    Default: 10.0.20.0/24
    AllowedValues:
      - 10.0.20.0/24
  KeyName:
    Type: String
    Description: Keyname for the keypair that Qwiklab will use to launch EC2 instances
    Default: default-lab-key
  AWSAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  ## Create a VPC and all resources needed for it to function.
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: VPC
          Value: JumpServer-and-CLI
        - Key: Name
          Value: Lab VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: VPC
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Param
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Public Subnet 1
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Param
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private Subnet 1
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn:
      - VPC
      - AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - PublicRouteTable
      - AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicRouteTable
      - PublicSubnet1
      - AttachGateway
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicRouteTable
      - PrivateSubnet1
      - AttachGateway
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - AppServer
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref AppServer
  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - AttachGateway
    Properties:
      GroupDescription: Enable http access to the web server
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: WebSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
  ## Create a Role for CloudTrail to use
  CloudTrailServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudTrailServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudtrail.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: '/'
  CloudTrailServiceRolePolicy:
    DependsOn:
      - CloudTrailServiceRole
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: 'Allow'
          Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
          Resource:
            - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
      PolicyName: CloudTrailServiceRolePolicy
      Roles:
        - !Ref CloudTrailServiceRole
  
  ## Create a security group for the application server open to port 22 for ssh
  AppSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - AttachGateway
    Properties:
      GroupDescription: Enable internal access to the application server
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: AppSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref PublicSubnet1Param
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
  ## Create an EC2 instance to encrypt.
  AppServer:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - AttachGateway
      - AppSecurityGroup
      - PrivateSubnet1
    Properties:
      ImageId: !Ref AWSAmiId
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: '0'
          AssociatePublicIpAddress: 'false'
          SubnetId: !Ref PrivateSubnet1
          GroupSet:
            - !Ref AppSecurityGroup
      SourceDestCheck: 'false'
      Tags:
        - Key: Name
          Value: AppServer
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y update

Outputs:
  Region:
    Value: !Ref 'AWS::Region'
  CloudTrailRole:
    Value: !Ref CloudTrailServiceRole